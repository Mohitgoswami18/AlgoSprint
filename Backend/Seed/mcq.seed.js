import ConnectToDatabase from "../Database/database.js"
import { Question } from "../models/mcq.model.js";

const sampleMCQ = [
  {
    topic: "c",
    difficulty: "easy",
    question: "What is the correct syntax to declare a variable in C?",
    options: ["var x = 5;", "int x = 5;", "x = 5;", "declare int x = 5;"],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "easy",
    question: "Which function is used to print output in C?",
    options: ["print()", "printf()", "cout", "write()"],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "easy",
    question: "What is the size of int data type in C (typically)?",
    options: ["1 byte", "2 bytes", "4 bytes", "8 bytes"],
    answer: 2,
  },
  {
    topic: "c",
    difficulty: "easy",
    question: "Which header file contains printf function?",
    options: ["<stdio.h>", "<stdlib.h>", "<string.h>", "<math.h>"],
    answer: 0,
  },
  {
    topic: "c",
    difficulty: "easy",
    question: "What does '\\n' represent in C?",
    options: ["Tab", "Space", "Newline", "Null"],
    answer: 2,
  },
  {
    topic: "c",
    difficulty: "easy",
    question: "Which operator is used for assignment in C?",
    options: ["==", "=", "!=", "::"],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "easy",
    question: "What is the correct way to declare a constant in C?",
    options: [
      "const int x = 5;",
      "constant int x = 5;",
      "final int x = 5;",
      "static int x = 5;",
    ],
    answer: 0,
  },
  {
    topic: "c",
    difficulty: "easy",
    question: "Which loop is entry-controlled in C?",
    options: ["do-while", "while", "for", "Both while and for"],
    answer: 3,
  },
  {
    topic: "c",
    difficulty: "easy",
    question: "What is the correct syntax for single line comment in C?",
    options: ["# comment", "// comment", "/* comment", "-- comment"],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "easy",
    question: "Which function is used to read a string in C?",
    options: ["scanf()", "gets()", "read()", "input()"],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "easy",
    question: "What is the range of char data type in C?",
    options: ["-128 to 127", "0 to 255", "-256 to 255", "0 to 127"],
    answer: 0,
  },
  {
    topic: "c",
    difficulty: "easy",
    question: "Which operator has the highest precedence in C?",
    options: ["*", "+", "()", "="],
    answer: 2,
  },
  {
    topic: "c",
    difficulty: "easy",
    question: "What does 'void' keyword represent in C?",
    options: ["Empty", "No return type", "Null", "Zero"],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "easy",
    question: "Which symbol is used to terminate statements in C?",
    options: [":", ".", ";", ","],
    answer: 2,
  },
  {
    topic: "c",
    difficulty: "easy",
    question: "What is the correct way to declare an array in C?",
    options: ["int arr[];", "int arr[10];", "array int arr;", "int[10] arr;"],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "medium",
    question: 'What will be the output of: printf("%d", sizeof(int));',
    options: ["2", "4", "8", "Depends on system"],
    answer: 3,
  },
  {
    topic: "c",
    difficulty: "medium",
    question: "Which storage class has maximum scope in C?",
    options: ["auto", "static", "extern", "register"],
    answer: 2,
  },
  {
    topic: "c",
    difficulty: "medium",
    question: "What is the difference between ++i and i++?",
    options: [
      "No difference",
      "++i increments before use, i++ increments after use",
      "++i is faster",
      "i++ is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "medium",
    question: "What happens when you don't initialize a local variable in C?",
    options: [
      "Initialized to 0",
      "Initialized to NULL",
      "Contains garbage value",
      "Compilation error",
    ],
    answer: 2,
  },
  {
    topic: "c",
    difficulty: "medium",
    question: "Which function is used to allocate memory dynamically in C?",
    options: ["alloc()", "malloc()", "new()", "calloc()"],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "medium",
    question: "What is the purpose of 'static' keyword in C?",
    options: [
      "Makes variable constant",
      "Preserves variable value between function calls",
      "Increases execution speed",
      "Used for global variables only",
    ],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "medium",
    question: "What is pointer arithmetic in C?",
    options: [
      "Mathematical operations on pointers",
      "Arithmetic operations using pointer values",
      "Operations that change pointer address",
      "All of the above",
    ],
    answer: 3,
  },
  {
    topic: "c",
    difficulty: "medium",
    question:
      "What is the difference between call by value and call by reference?",
    options: [
      "No difference",
      "Call by value passes copy, call by reference passes address",
      "Call by reference is faster",
      "Call by value modifies original",
    ],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "medium",
    question:
      "Which operator is used to access structure members through pointer?",
    options: [".", "->", "*", "&"],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "medium",
    question: "What is the purpose of 'typedef' in C?",
    options: [
      "Define new data type",
      "Create alias for existing data type",
      "Declare variables",
      "Include header files",
    ],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "medium",
    question: "What happens when you use 'break' in nested loops?",
    options: [
      "Exits all loops",
      "Exits only the innermost loop",
      "Compilation error",
      "Continues to next iteration",
    ],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "medium",
    question: "What is the difference between 'struct' and 'union' in C?",
    options: [
      "No difference",
      "struct allocates separate memory, union shares memory",
      "union is deprecated",
      "struct is for functions only",
    ],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "medium",
    question:
      "Which preprocessor directive is used for conditional compilation?",
    options: ["#include", "#define", "#ifdef", "#pragma"],
    answer: 2,
  },
  {
    topic: "c",
    difficulty: "medium",
    question: "What is the return type of malloc() function?",
    options: ["int*", "void*", "char*", "size_t"],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "medium",
    question: "What is the purpose of 'volatile' keyword in C?",
    options: [
      "Makes variable constant",
      "Prevents compiler optimization",
      "Increases performance",
      "Used for error handling",
    ],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "hard",
    question:
      "What happens when you access an array element beyond its bounds in C?",
    options: [
      "Compilation error",
      "Runtime error",
      "Undefined behavior",
      "Returns 0",
    ],
    answer: 2,
  },
  {
    topic: "c",
    difficulty: "hard",
    question: "What is dangling pointer in C?",
    options: [
      "Pointer with NULL value",
      "Pointer pointing to deallocated memory",
      "Uninitialized pointer",
      "Pointer to pointer",
    ],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "hard",
    question: "What is the difference between shallow copy and deep copy?",
    options: [
      "No difference",
      "Shallow copies references, deep copies actual data",
      "Deep copy is faster",
      "Shallow copy is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "hard",
    question: "What is function pointer in C?",
    options: [
      "Pointer to function address",
      "Function that returns pointer",
      "Pointer inside function",
      "Function parameter",
    ],
    answer: 0,
  },
  {
    topic: "c",
    difficulty: "hard",
    question: "What is memory leakage in C?",
    options: [
      "Memory corruption",
      "Unreleased dynamically allocated memory",
      "Stack overflow",
      "Segmentation fault",
    ],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "hard",
    question: "What is the purpose of 'restrict' keyword in C99?",
    options: [
      "Restricts access",
      "Hints compiler about pointer aliasing",
      "Makes variable read-only",
      "Used for error handling",
    ],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "hard",
    question: "What happens in case of stack overflow in C?",
    options: [
      "Program terminates gracefully",
      "Undefined behavior",
      "Returns error code",
      "Automatically handled",
    ],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "hard",
    question: "What is the difference between longjmp() and return statement?",
    options: [
      "No difference",
      "longjmp can jump across functions",
      "return is faster",
      "longjmp is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "hard",
    question: "What is sequence point in C?",
    options: [
      "Point in code execution",
      "Point where side effects are completed",
      "Debugging point",
      "Entry point of function",
    ],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "hard",
    question: "What is the difference between macro and inline function?",
    options: [
      "No difference",
      "Macro is preprocessor replacement, inline is compiler optimization",
      "Inline is faster",
      "Macro is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "hard",
    question: "What happens when you modify a string literal in C?",
    options: [
      "String gets modified",
      "Compilation error",
      "Undefined behavior",
      "Runtime error",
    ],
    answer: 2,
  },
  {
    topic: "c",
    difficulty: "hard",
    question: "What is the purpose of pragma directive in C?",
    options: [
      "Include files",
      "Define macros",
      "Give compiler-specific instructions",
      "Conditional compilation",
    ],
    answer: 2,
  },
  {
    topic: "c",
    difficulty: "hard",
    question: "What is memory alignment in C?",
    options: [
      "Organizing memory sequentially",
      "Aligning data at specific memory boundaries",
      "Sorting memory contents",
      "Allocating continuous memory",
    ],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "hard",
    question: "What is the difference between exit() and return in main()?",
    options: [
      "No difference",
      "exit() terminates program immediately",
      "return is faster",
      "exit() is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "hard",
    question: "What is wild pointer in C?",
    options: [
      "Pointer to wild memory",
      "Uninitialized pointer",
      "Pointer to multiple locations",
      "Pointer with random value",
    ],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "hard",
    question: "What is the difference between const char* and char* const?",
    options: [
      "No difference",
      "const char* - data is constant, char* const - pointer is constant",
      "char* const is faster",
      "const char* is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "hard",
    question: "What happens during function call in terms of stack?",
    options: [
      "Nothing special",
      "Stack frame is created with parameters and local variables",
      "Stack is cleared",
      "Stack overflow occurs",
    ],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "hard",
    question: 'What is the purpose of extern "C" in C++?',
    options: [
      "Include C code",
      "Prevent name mangling for C linkage",
      "Use C libraries",
      "All of the above",
    ],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "hard",
    question: "What is buffer overflow in C?",
    options: [
      "Buffer is full",
      "Writing beyond buffer boundaries",
      "Buffer memory leak",
      "Buffer underflow",
    ],
    answer: 1,
  },
  {
    topic: "c",
    difficulty: "hard",
    question: "What is the difference between setjmp() and longjmp()?",
    options: [
      "setjmp saves context, longjmp restores it",
      "No difference",
      "longjmp is faster",
      "setjmp is deprecated",
    ],
    answer: 0,
  },
  {
    topic: "c++",
    difficulty: "easy",
    question:
      "Which header file is required for input/output operations in C++?",
    options: ["<stdio.h>", "<iostream>", "<conio.h>", "<iomanip>"],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "easy",
    question: "What is the correct syntax to create an object in C++?",
    options: [
      "ClassName obj;",
      "new ClassName obj;",
      "create ClassName obj;",
      "ClassName obj();",
    ],
    answer: 0,
  },
  {
    topic: "c++",
    difficulty: "easy",
    question: "Which operator is used for scope resolution in C++?",
    options: [".", "->", "::", "::>"],
    answer: 2,
  },
  {
    topic: "c++",
    difficulty: "easy",
    question: "What does 'cout' represent in C++?",
    options: ["Input stream", "Output stream", "Error stream", "File stream"],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "easy",
    question: "Which keyword is used to define a class in C++?",
    options: ["class", "struct", "object", "define"],
    answer: 0,
  },
  {
    topic: "c++",
    difficulty: "easy",
    question: "What is the default access specifier for class members in C++?",
    options: ["public", "private", "protected", "friend"],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "easy",
    question: "Which symbol is used for extraction operator in C++?",
    options: ["<<", ">>", "<>", "><"],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "easy",
    question: "What is constructor in C++?",
    options: [
      "Function to destroy objects",
      "Special function to initialize objects",
      "Function to copy objects",
      "Function to compare objects",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "easy",
    question: "Which keyword is used for inheritance in C++?",
    options: ["extends", "inherits", ":", "->"],
    answer: 2,
  },
  {
    topic: "c++",
    difficulty: "easy",
    question: "What is destructor in C++?",
    options: [
      "Function to create objects",
      "Function to initialize objects",
      "Function to cleanup objects",
      "Function to copy objects",
    ],
    answer: 2,
  },
  {
    topic: "c++",
    difficulty: "easy",
    question: "Which header is required for string operations in C++?",
    options: ["<string.h>", "<string>", "<cstring>", "<str>"],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "easy",
    question: "What does 'endl' do in C++?",
    options: [
      "End line",
      "Insert newline and flush buffer",
      "End loop",
      "End function",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "easy",
    question: "Which operator is overloaded for output in C++?",
    options: [">>", "<<", "<>", "><"],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "easy",
    question: "What is the size of bool data type in C++?",
    options: ["1 bit", "1 byte", "2 bytes", "4 bytes"],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "easy",
    question: "Which keyword is used to prevent inheritance in C++?",
    options: ["final", "sealed", "private", "protected"],
    answer: 0,
  },
  {
    topic: "c++",
    difficulty: "medium",
    question: "What is the difference between 'new' and 'malloc' in C++?",
    options: [
      "No difference",
      "new calls constructor, malloc doesn't",
      "malloc is faster",
      "new is for arrays only",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "medium",
    question: "What is function overloading in C++?",
    options: [
      "Same function name with different parameters",
      "Same function with different return types",
      "Function inside another function",
      "Function with multiple definitions",
    ],
    answer: 0,
  },
  {
    topic: "c++",
    difficulty: "medium",
    question: "What is the purpose of 'virtual' keyword in C++?",
    options: [
      "Makes function faster",
      "Enables runtime polymorphism",
      "Makes function private",
      "Prevents function overriding",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "medium",
    question: "What is copy constructor in C++?",
    options: [
      "Constructor that copies objects",
      "Constructor with no parameters",
      "Constructor that destroys objects",
      "Default constructor",
    ],
    answer: 0,
  },
  {
    topic: "c++",
    difficulty: "medium",
    question: "What is operator overloading in C++?",
    options: [
      "Using same operator multiple times",
      "Giving new meaning to existing operators",
      "Creating new operators",
      "Removing existing operators",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "medium",
    question: "What is the difference between struct and class in C++?",
    options: [
      "No difference",
      "struct members are public by default, class members are private",
      "struct is for data, class is for functions",
      "class is faster",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "medium",
    question: "What is pure virtual function in C++?",
    options: [
      "Function with no body",
      "Virtual function with = 0",
      "Function that cannot be overridden",
      "Function with pure implementation",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "medium",
    question: "What is multiple inheritance in C++?",
    options: [
      "Class inheriting from multiple classes",
      "Multiple classes inheriting from one class",
      "Class with multiple constructors",
      "Class with multiple functions",
    ],
    answer: 0,
  },
  {
    topic: "c++",
    difficulty: "medium",
    question: "What is template in C++?",
    options: [
      "Pre-defined class",
      "Generic programming feature",
      "Design pattern",
      "Header file",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "medium",
    question: "What is namespace in C++?",
    options: [
      "Name of space",
      "Logical grouping of identifiers",
      "Memory space",
      "Function name",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "medium",
    question: "What is friend function in C++?",
    options: [
      "Function inside class",
      "Function that can access private members",
      "Function with friend keyword",
      "Function that returns friend",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "medium",
    question: "What is abstract class in C++?",
    options: [
      "Class with no objects",
      "Class with at least one pure virtual function",
      "Class with abstract keyword",
      "Class with no implementation",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "medium",
    question: "What is the difference between shallow copy and deep copy?",
    options: [
      "No difference",
      "Shallow copies pointers, deep copies pointed data",
      "Deep copy is faster",
      "Shallow copy is automatic",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "medium",
    question: "What is static member function in C++?",
    options: [
      "Function that doesn't change",
      "Function that belongs to class, not object",
      "Function with static variables",
      "Function called statically",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "medium",
    question: "What is const member function in C++?",
    options: [
      "Function that is constant",
      "Function that cannot modify object state",
      "Function with const parameters",
      "Function that returns const",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "hard",
    question: "What is the Rule of Three in C++?",
    options: [
      "Three access specifiers",
      "Three types of inheritance",
      "Destructor, copy constructor, and assignment operator",
      "Three phases of compilation",
    ],
    answer: 2,
  },
  {
    topic: "c++",
    difficulty: "hard",
    question: "What is RAII in C++?",
    options: [
      "Resource Acquisition Is Initialization",
      "Rapid Application Interface Integration",
      "Runtime Application Interface Implementation",
      "Resource Allocation In Inheritance",
    ],
    answer: 0,
  },
  {
    topic: "c++",
    difficulty: "hard",
    question: "What is diamond problem in C++?",
    options: [
      "Problem with diamond operator",
      "Ambiguity in multiple inheritance",
      "Memory allocation problem",
      "Template specialization problem",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "hard",
    question: "What are smart pointers in C++?",
    options: [
      "Intelligent pointers",
      "Objects that manage memory automatically",
      "Pointers with smart keyword",
      "Pointers that can think",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "hard",
    question: "What is template specialization in C++?",
    options: [
      "Special template",
      "Providing specific implementation for template",
      "Template with special keyword",
      "Template optimization",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "hard",
    question: "What is move semantics in C++11?",
    options: [
      "Moving objects in memory",
      "Transferring ownership of resources",
      "Moving code blocks",
      "Semantic analysis",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "hard",
    question: "What is the difference between lvalue and rvalue?",
    options: [
      "Left and right values",
      "lvalue has address, rvalue is temporary",
      "lvalue is faster",
      "No difference",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "hard",
    question: "What is perfect forwarding in C++?",
    options: [
      "Forwarding without loss",
      "Preserving value category in template forwarding",
      "Perfect function forwarding",
      "Forwarding with perfection",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "hard",
    question: "What is SFINAE in C++?",
    options: [
      "Substitution Failure Is Not An Error",
      "Special Function Interface And Execution",
      "Static Function Implementation And Enhancement",
      "System Function Integration And Extension",
    ],
    answer: 0,
  },
  {
    topic: "c++",
    difficulty: "hard",
    question:
      "What is the difference between std::unique_ptr and std::shared_ptr?",
    options: [
      "No difference",
      "unique_ptr has exclusive ownership, shared_ptr allows shared ownership",
      "shared_ptr is faster",
      "unique_ptr is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "hard",
    question: "What is lambda expression in C++11?",
    options: [
      "Greek letter expression",
      "Anonymous function",
      "Mathematical expression",
      "Template expression",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "hard",
    question: "What is constexpr in C++11?",
    options: [
      "Constant expression",
      "Expression evaluated at compile time",
      "Constraint expression",
      "Constant expert",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "hard",
    question: "What is the difference between auto and decltype?",
    options: [
      "No difference",
      "auto deduces type, decltype returns type",
      "decltype is faster",
      "auto is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "hard",
    question: "What is variadic template in C++?",
    options: [
      "Variable template",
      "Template that accepts variable number of arguments",
      "Template with variables",
      "Varying template",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "hard",
    question: "What is type erasure in C++?",
    options: [
      "Erasing types",
      "Hiding type information while preserving interface",
      "Removing type safety",
      "Type optimization",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "hard",
    question: "What is the difference between std::forward and std::move?",
    options: [
      "No difference",
      "forward preserves value category, move casts to rvalue",
      "move is faster",
      "forward is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "hard",
    question: "What is ADL (Argument Dependent Lookup) in C++?",
    options: [
      "Automatic Data Loading",
      "Argument Dependent Lookup for function resolution",
      "Advanced Data Logic",
      "Automated Dependency Linking",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "hard",
    question:
      "What is the difference between stack unwinding and stack overflow?",
    options: [
      "Same thing",
      "Unwinding destroys objects during exception, overflow exceeds stack limit",
      "Overflow is faster",
      "Unwinding is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "hard",
    question: "What is the purpose of std::enable_if?",
    options: [
      "Enable interface",
      "Conditional template instantiation",
      "Enable inheritance",
      "Enable polymorphism",
    ],
    answer: 1,
  },
  {
    topic: "c++",
    difficulty: "hard",
    question: "What is the difference between composition and inheritance?",
    options: [
      "No difference",
      "Composition uses 'has-a', inheritance uses 'is-a'",
      "Inheritance is faster",
      "Composition is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "easy",
    question: "Which keyword is used to create an object in Java?",
    options: ["create", "new", "object", "make"],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "easy",
    question: "What is the default value of boolean variable in Java?",
    options: ["true", "false", "0", "null"],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "easy",
    question: "Which package is automatically imported in Java?",
    options: ["java.util", "java.io", "java.lang", "java.awt"],
    answer: 2,
  },
  {
    topic: "java",
    difficulty: "easy",
    question: "What is the correct way to declare an array in Java?",
    options: ["int arr[];", "int[] arr;", "Both are correct", "array int arr;"],
    answer: 2,
  },
  {
    topic: "java",
    difficulty: "easy",
    question: "Which keyword is used for inheritance in Java?",
    options: ["extends", "implements", "inherits", "super"],
    answer: 0,
  },
  {
    topic: "java",
    difficulty: "easy",
    question: "What does JVM stand for?",
    options: [
      "Java Virtual Machine",
      "Java Variable Method",
      "Java Vendor Machine",
      "Java Version Manager",
    ],
    answer: 0,
  },
  {
    topic: "java",
    difficulty: "easy",
    question:
      "Which access modifier makes a member accessible only within the same class?",
    options: ["public", "private", "protected", "default"],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "easy",
    question: "What is constructor in Java?",
    options: [
      "A method to destroy objects",
      "A special method to initialize objects",
      "A method to copy objects",
      "A method to compare objects",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "easy",
    question: "Which loop is guaranteed to execute at least once?",
    options: ["for", "while", "do-while", "enhanced for"],
    answer: 2,
  },
  {
    topic: "java",
    difficulty: "medium",
    question:
      "What is the difference between String and StringBuilder in Java?",
    options: [
      "No difference",
      "String is mutable, StringBuilder is immutable",
      "String is immutable, StringBuilder is mutable",
      "StringBuilder is deprecated",
    ],
    answer: 2,
  },
  {
    topic: "java",
    difficulty: "medium",
    question: "What is method overloading in Java?",
    options: [
      "Same method name with different parameters",
      "Same method with different return type",
      "Method inside another method",
      "Method with multiple implementations",
    ],
    answer: 0,
  },
  {
    topic: "java",
    difficulty: "medium",
    question: "What is the difference between == and equals() in Java?",
    options: [
      "No difference",
      "== compares references, equals() compares content",
      "equals() compares references",
      "== is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "medium",
    question: "What is interface in Java?",
    options: [
      "A class with only abstract methods",
      "A contract that classes must follow",
      "A type of inheritance",
      "A design pattern",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "medium",
    question: "What is the purpose of 'static' keyword in Java?",
    options: [
      "Makes variable constant",
      "Belongs to class rather than instance",
      "Increases performance",
      "Makes method private",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "medium",
    question: "What is exception handling in Java?",
    options: [
      "Handling exceptional cases",
      "Mechanism to handle runtime errors",
      "Handling special methods",
      "Exception to rules",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "medium",
    question: "What is the difference between ArrayList and LinkedList?",
    options: [
      "No difference",
      "ArrayList uses array, LinkedList uses linked structure",
      "LinkedList is faster",
      "ArrayList is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "medium",
    question: "What is abstract class in Java?",
    options: [
      "Class that cannot be instantiated",
      "Class with abstract keyword",
      "Class with no methods",
      "Class with only abstract methods",
    ],
    answer: 0,
  },
  {
    topic: "java",
    difficulty: "medium",
    question: "What is the purpose of 'final' keyword in Java?",
    options: [
      "Makes variable mutable",
      "Prevents inheritance/modification",
      "Increases performance",
      "Makes method private",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "medium",
    question: "What is polymorphism in Java?",
    options: [
      "Multiple forms of single entity",
      "Multiple inheritance",
      "Multiple methods",
      "Multiple classes",
    ],
    answer: 0,
  },
  {
    topic: "java",
    difficulty: "medium",
    question: "What is the difference between HashMap and TreeMap?",
    options: [
      "No difference",
      "HashMap is unsorted, TreeMap is sorted",
      "TreeMap is faster",
      "HashMap is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "medium",
    question: "What is garbage collection in Java?",
    options: [
      "Collecting garbage",
      "Automatic memory management",
      "Manual memory management",
      "Memory allocation",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "medium",
    question: "What is the difference between throw and throws in Java?",
    options: [
      "No difference",
      "throw throws exception, throws declares exception",
      "throws is deprecated",
      "throw is faster",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "medium",
    question: "What is wrapper class in Java?",
    options: [
      "Class that wraps primitive types",
      "Class that wraps other classes",
      "Design pattern",
      "Security feature",
    ],
    answer: 0,
  },
  {
    topic: "java",
    difficulty: "medium",
    question: "What is the purpose of 'synchronized' keyword in Java?",
    options: [
      "Synchronizes methods",
      "Provides thread safety",
      "Synchronizes classes",
      "Synchronizes variables",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "hard",
    question: "What is the purpose of the 'volatile' keyword in Java?",
    options: [
      "Makes variables constant",
      "Ensures thread-safe access to variables",
      "Increases performance",
      "Used for exception handling",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "hard",
    question: "What is reflection in Java?",
    options: [
      "Reflecting objects",
      "Ability to inspect and modify runtime behavior",
      "Design pattern",
      "Memory reflection",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "hard",
    question: "What is the difference between Comparable and Comparator?",
    options: [
      "No difference",
      "Comparable defines natural ordering, Comparator defines custom ordering",
      "Comparator is faster",
      "Comparable is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "hard",
    question: "What is deadlock in Java?",
    options: [
      "Lock that is dead",
      "Situation where threads wait for each other indefinitely",
      "Security mechanism",
      "Performance issue",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "hard",
    question:
      "What is the difference between fail-fast and fail-safe iterators?",
    options: [
      "No difference",
      "fail-fast throws exception on modification, fail-safe doesn't",
      "fail-safe is faster",
      "fail-fast is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "hard",
    question: "What is the difference between wait() and sleep() in Java?",
    options: [
      "No difference",
      "wait() releases lock, sleep() doesn't",
      "sleep() is faster",
      "wait() is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "hard",
    question: "What is lambda expression in Java 8?",
    options: [
      "Greek expression",
      "Anonymous function",
      "Mathematical expression",
      "Lambda calculus",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "hard",
    question: "What is Stream API in Java 8?",
    options: [
      "Stream of data",
      "Functional programming approach for collections",
      "Input/output streams",
      "Network streams",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "hard",
    question: "What is method reference in Java 8?",
    options: [
      "Reference to method",
      "Shorthand notation for lambda expressions",
      "Method pointer",
      "Method documentation",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "hard",
    question: "What is the difference between ConcurrentHashMap and HashMap?",
    options: [
      "No difference",
      "ConcurrentHashMap is thread-safe, HashMap is not",
      "HashMap is faster",
      "ConcurrentHashMap is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "hard",
    question: "What is the purpose of Optional class in Java 8?",
    options: [
      "Optional parameters",
      "Handle null values gracefully",
      "Optional methods",
      "Optional classes",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "hard",
    question: "What is the difference between ExecutorService and Thread?",
    options: [
      "No difference",
      "ExecutorService manages thread pool, Thread is single thread",
      "Thread is faster",
      "ExecutorService is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "hard",
    question: "What is the diamond problem in Java?",
    options: [
      "Problem with diamond operator",
      "Multiple inheritance ambiguity (solved with interfaces)",
      "Memory issue",
      "Performance issue",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "hard",
    question: "What is the purpose of CompletableFuture in Java 8?",
    options: [
      "Complete futures",
      "Asynchronous programming support",
      "Future completion",
      "Completable tasks",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "hard",
    question:
      "What is the difference between ClassNotFoundException and NoClassDefFoundError?",
    options: [
      "Same thing",
      "ClassNotFoundException at runtime, NoClassDefFoundError at compile time",
      "NoClassDefFoundError is faster",
      "ClassNotFoundException is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "hard",
    question: "What is JIT compiler in Java?",
    options: [
      "Java In Time",
      "Just In Time compiler",
      "Java Integration Tool",
      "Java Interface Technology",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "hard",
    question: "What is the purpose of @FunctionalInterface annotation?",
    options: [
      "Functional programming",
      "Indicates interface with single abstract method",
      "Function annotation",
      "Interface function",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "hard",
    question:
      "What is the difference between shallow copy and deep copy in Java?",
    options: [
      "No difference",
      "Shallow copies references, deep copies objects",
      "Deep copy is faster",
      "Shallow copy is automatic",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "hard",
    question: "What is the purpose of transient keyword in Java?",
    options: [
      "Makes variable temporary",
      "Excludes field from serialization",
      "Makes variable constant",
      "Transient operations",
    ],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "hard",
    question:
      "What is the difference between String, StringBuffer, and StringBuilder?",
    options: [
      "No difference",
      "String immutable, StringBuffer synchronized mutable, StringBuilder non-synchronized mutable",
      "StringBuilder is fastest",
      "String is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "easy",
    question: "How do you create a list in Python?",
    options: ["list = {}", "list = []", "list = ()", "list = <>"],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "easy",
    question: "Which function is used to get the length of a list?",
    options: ["length()", "size()", "len()", "count()"],
    answer: 2,
  },
  {
    topic: "python",
    difficulty: "easy",
    question: "What is the correct syntax for a function in Python?",
    options: [
      "function myFunc():",
      "def myFunc():",
      "create myFunc():",
      "func myFunc():",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "easy",
    question: "How do you create a comment in Python?",
    options: ["// comment", "/* comment */", "# comment", "-- comment"],
    answer: 2,
  },
  {
    topic: "python",
    difficulty: "easy",
    question: "Which data type is used for text in Python?",
    options: ["text", "string", "str", "char"],
    answer: 2,
  },
  {
    topic: "python",
    difficulty: "easy",
    question: "How do you print output in Python?",
    options: ["print()", "console.log()", "printf()", "echo()"],
    answer: 0,
  },
  {
    topic: "python",
    difficulty: "easy",
    question: "What is the correct way to create a dictionary?",
    options: ["dict = []", "dict = {}", "dict = ()", "dict = <>"],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "easy",
    question: "Which keyword is used for conditional statements?",
    options: ["when", "if", "condition", "check"],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "easy",
    question: "How do you create a tuple in Python?",
    options: ["tuple = []", "tuple = {}", "tuple = ()", "tuple = <>"],
    answer: 2,
  },
  {
    topic: "python",
    difficulty: "easy",
    question: "Which operator is used for exponentiation in Python?",
    options: ["^", "**", "pow", "exp"],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "easy",
    question: "What is the correct syntax for a for loop?",
    options: [
      "for i in range(10):",
      "for (i in range(10)):",
      "for i = 0 to 10:",
      "loop i in range(10):",
    ],
    answer: 0,
  },
  {
    topic: "python",
    difficulty: "easy",
    question: "How do you check the type of a variable?",
    options: ["typeof()", "type()", "vartype()", "gettype()"],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "easy",
    question: "Which method is used to add an element to a list?",
    options: ["add()", "append()", "insert()", "push()"],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "easy",
    question: "What is the correct way to import a module?",
    options: [
      "include module",
      "import module",
      "using module",
      "require module",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "easy",
    question: "How do you create a string with multiple lines?",
    options: ["Use +", "Use \\n", "Use triple quotes", "Use semicolon"],
    answer: 2,
  },
  {
    topic: "python",
    difficulty: "medium",
    question: "What is the difference between '==' and 'is' in Python?",
    options: [
      "No difference",
      "== compares values, is compares identity",
      "is compares values, == compares identity",
      "is is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "medium",
    question: "What is list comprehension in Python?",
    options: [
      "Understanding lists",
      "Compact way to create lists",
      "List documentation",
      "List comparison",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "medium",
    question: "What is the difference between append() and extend()?",
    options: [
      "No difference",
      "append() adds single element, extend() adds multiple elements",
      "extend() is faster",
      "append() is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "medium",
    question: "What is lambda function in Python?",
    options: [
      "Named function",
      "Anonymous function",
      "Lambda calculus",
      "Greek function",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "medium",
    question: "What is the purpose of *args in Python?",
    options: [
      "Multiplication",
      "Variable number of arguments",
      "Pointer",
      "All arguments",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "medium",
    question: "What is **kwargs in Python?",
    options: [
      "Power operator",
      "Keyword arguments",
      "Key arguments",
      "Keyword values",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "medium",
    question: "What is the difference between shallow copy and deep copy?",
    options: [
      "No difference",
      "Shallow copies references, deep copies objects",
      "Deep copy is faster",
      "Shallow copy is automatic",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "medium",
    question: "What is generator in Python?",
    options: [
      "Code generator",
      "Function that returns iterator",
      "Random number generator",
      "Data generator",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "medium",
    question: "What is the purpose of __init__ method?",
    options: [
      "Initialize class",
      "Constructor method",
      "Initial method",
      "Initialization function",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "medium",
    question: "What is exception handling in Python?",
    options: [
      "Handling exceptions",
      "try-except mechanism",
      "Error handling",
      "Exception management",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "medium",
    question: "What is the difference between remove() and pop()?",
    options: [
      "No difference",
      "remove() removes by value, pop() removes by index",
      "pop() is faster",
      "remove() is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "medium",
    question: "What is set in Python?",
    options: [
      "Setting values",
      "Unordered collection of unique elements",
      "Ordered collection",
      "Set theory",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "medium",
    question: "What is the purpose of self in Python?",
    options: [
      "Reference to current instance",
      "Self-reference",
      "Personal reference",
      "Class reference",
    ],
    answer: 0,
  },
  {
    topic: "python",
    difficulty: "medium",
    question: "What is the difference between break and continue?",
    options: [
      "No difference",
      "break exits loop, continue skips iteration",
      "continue is faster",
      "break is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "medium",
    question: "What is the purpose of pass statement?",
    options: [
      "Pass values",
      "Null operation placeholder",
      "Pass by reference",
      "Password",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "hard",
    question: "What is a decorator in Python?",
    options: [
      "A design pattern",
      "A function that modifies another function",
      "A class method",
      "An import statement",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "hard",
    question: "What is metaclass in Python?",
    options: [
      "Meta information",
      "Class that creates classes",
      "Class metadata",
      "Class of classes",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "hard",
    question: "What is the Global Interpreter Lock (GIL)?",
    options: [
      "Global lock",
      "Mechanism that prevents multiple threads from executing Python code simultaneously",
      "Global interpreter",
      "Lock mechanism",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "hard",
    question: "What is the difference between @staticmethod and @classmethod?",
    options: [
      "No difference",
      "staticmethod doesn't receive implicit argument, classmethod receives cls",
      "classmethod is faster",
      "staticmethod is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "hard",
    question: "What is monkey patching in Python?",
    options: [
      "Patching monkeys",
      "Dynamically modifying classes or modules at runtime",
      "Debug technique",
      "Testing method",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "hard",
    question: "What is the difference between __str__ and __repr__?",
    options: [
      "No difference",
      "__str__ for user display, __repr__ for developer",
      "__repr__ is faster",
      "__str__ is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "hard",
    question: "What is context manager in Python?",
    options: [
      "Context management",
      "Protocol for with statement",
      "Manager class",
      "Context switching",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "hard",
    question: "What is the difference between is and == for small integers?",
    options: [
      "No difference",
      "is compares identity, but Python caches small integers",
      "== is faster",
      "is is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "hard",
    question: "What is closure in Python?",
    options: [
      "Closing function",
      "Function that captures variables from enclosing scope",
      "Function closure",
      "Closed function",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "hard",
    question: "What is the purpose of __slots__ in Python?",
    options: [
      "Slot machine",
      "Restrict attributes and save memory",
      "Time slots",
      "Slot allocation",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "hard",
    question:
      "What is the difference between multiprocessing and multithreading in Python?",
    options: [
      "No difference",
      "multiprocessing uses separate processes, multithreading uses threads",
      "multithreading is faster",
      "multiprocessing is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "hard",
    question: "What is duck typing in Python?",
    options: [
      "Typing like duck",
      "If it looks like duck and quacks like duck, it's duck",
      "Type of duck",
      "Dynamic typing",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "hard",
    question: "What is the purpose of yield keyword?",
    options: [
      "Yield results",
      "Create generator function",
      "Yield control",
      "Return yield",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "hard",
    question: "What is the difference between mutable and immutable objects?",
    options: [
      "No difference",
      "Mutable can be changed, immutable cannot",
      "Immutable is faster",
      "Mutable is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "hard",
    question: "What is the purpose of @property decorator?",
    options: [
      "Property management",
      "Create getter/setter methods",
      "Property declaration",
      "Property access",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "hard",
    question:
      "What is the difference between __getattr__ and __getattribute__?",
    options: [
      "No difference",
      "__getattr__ called when attribute not found, __getattribute__ called for all attribute access",
      "__getattribute__ is faster",
      "__getattr__ is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "hard",
    question: "What is namespace in Python?",
    options: [
      "Name space",
      "Mapping from names to objects",
      "Space for names",
      "Named space",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "hard",
    question: "What is the difference between deepcopy and copy?",
    options: [
      "No difference",
      "copy creates shallow copy, deepcopy creates deep copy",
      "deepcopy is faster",
      "copy is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "hard",
    question: "What is the purpose of __call__ method?",
    options: [
      "Call method",
      "Makes object callable like function",
      "Method call",
      "Calling function",
    ],
    answer: 1,
  },
  {
    topic: "python",
    difficulty: "hard",
    question: "What is the difference between range and xrange in Python 2?",
    options: [
      "No difference",
      "range returns list, xrange returns iterator",
      "xrange is faster",
      "range is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "easy",
    question: "How do you create a variable in JavaScript?",
    options: ["var x;", "variable x;", "v x;", "create x;"],
    answer: 0,
  },
  {
    topic: "javascript",
    difficulty: "easy",
    question: "Which method is used to print output in JavaScript?",
    options: [
      "print()",
      "console.log()",
      "document.write()",
      "All of the above",
    ],
    answer: 3,
  },
  {
    topic: "javascript",
    difficulty: "easy",
    question: "How do you create a function in JavaScript?",
    options: [
      "function myFunc()",
      "def myFunc()",
      "create function myFunc()",
      "func myFunc()",
    ],
    answer: 0,
  },
  {
    topic: "javascript",
    difficulty: "easy",
    question: "What is the correct syntax for a single line comment?",
    options: ["# comment", "// comment", "/* comment", "-- comment"],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "easy",
    question: "How do you create an array in JavaScript?",
    options: ["var arr = []", "var arr = {}", "var arr = ()", "array arr"],
    answer: 0,
  },
  {
    topic: "javascript",
    difficulty: "easy",
    question: "Which operator is used for equality comparison?",
    options: ["=", "==", "===", "!="],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "easy",
    question: "How do you create an object in JavaScript?",
    options: ["var obj = []", "var obj = {}", "var obj = ()", "object obj"],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "easy",
    question: "What does 'typeof' operator return for an array?",
    options: ["array", "object", "list", "collection"],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "easy",
    question: "How do you access the first element of an array?",
    options: ["arr[0]", "arr[1]", "arr.first", "arr.get(0)"],
    answer: 0,
  },
  {
    topic: "javascript",
    difficulty: "easy",
    question: "Which method adds an element to the end of an array?",
    options: ["add()", "append()", "push()", "insert()"],
    answer: 2,
  },
  {
    topic: "javascript",
    difficulty: "easy",
    question: "What is the correct syntax for an if statement?",
    options: [
      "if (condition)",
      "if condition",
      "if (condition) {}",
      "when (condition)",
    ],
    answer: 2,
  },
  {
    topic: "javascript",
    difficulty: "easy",
    question: "How do you write a for loop in JavaScript?",
    options: [
      "for (i = 0; i < 10; i++)",
      "for i in range(10)",
      "for (i in 10)",
      "loop (i = 0; i < 10; i++)",
    ],
    answer: 0,
  },
  {
    topic: "javascript",
    difficulty: "easy",
    question: "Which method converts a string to lowercase?",
    options: ["toLowerCase()", "lower()", "toLower()", "downcase()"],
    answer: 0,
  },
  {
    topic: "javascript",
    difficulty: "easy",
    question: "What does 'null' represent in JavaScript?",
    options: ["Nothing", "Empty value", "Intentional absence of value", "Zero"],
    answer: 2,
  },
  {
    topic: "javascript",
    difficulty: "easy",
    question: "How do you check the length of a string?",
    options: ["str.length", "str.size", "str.count", "length(str)"],
    answer: 0,
  },
  {
    topic: "javascript",
    difficulty: "medium",
    question: "What is the difference between '==' and '===' in JavaScript?",
    options: [
      "No difference",
      "== compares values, === compares values and types",
      "=== is faster",
      "== is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "medium",
    question: "What is hoisting in JavaScript?",
    options: [
      "Lifting heavy objects",
      "Moving declarations to the top of scope",
      "Performance optimization",
      "Error handling",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "medium",
    question: "What is the difference between 'var', 'let', and 'const'?",
    options: [
      "No difference",
      "Different scope and mutability rules",
      "Performance differences",
      "Syntax variations",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "medium",
    question: "What is closure in JavaScript?",
    options: [
      "Closing function",
      "Function that has access to outer function's variables",
      "Function closure",
      "Closed function",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "medium",
    question: "What is the difference between 'null' and 'undefined'?",
    options: [
      "No difference",
      "null is assigned, undefined is uninitialized",
      "undefined is faster",
      "null is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "medium",
    question: "What is callback function in JavaScript?",
    options: [
      "Function that calls back",
      "Function passed as argument to another function",
      "Function that returns",
      "Backward function",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "medium",
    question: "What is the purpose of 'this' keyword?",
    options: [
      "Current object",
      "Reference to current context",
      "This object",
      "Current function",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "medium",
    question: "What is arrow function in ES6?",
    options: [
      "Function with arrow",
      "Concise way to write functions",
      "Function that points",
      "Directional function",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "medium",
    question: "What is the difference between map() and forEach()?",
    options: [
      "No difference",
      "map() returns new array, forEach() doesn't",
      "forEach() is faster",
      "map() is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "medium",
    question: "What is promise in JavaScript?",
    options: [
      "Promise to execute",
      "Object representing eventual completion of async operation",
      "Future value",
      "Commitment",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "medium",
    question:
      "What is the difference between function declaration and function expression?",
    options: [
      "No difference",
      "Declaration is hoisted, expression is not",
      "Expression is faster",
      "Declaration is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "medium",
    question: "What is destructuring in JavaScript?",
    options: [
      "Destroying objects",
      "Extracting values from arrays/objects",
      "Breaking down code",
      "Destructive operation",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "medium",
    question: "What is the spread operator (...)?",
    options: [
      "Spreading butter",
      "Expands iterables into individual elements",
      "Spread syntax",
      "Distribution operator",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "medium",
    question: "What is template literal in ES6?",
    options: [
      "Literal template",
      "String interpolation using backticks",
      "Template for literals",
      "Literal strings",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "medium",
    question:
      "What is the difference between synchronous and asynchronous code?",
    options: [
      "No difference",
      "Sync blocks execution, async doesn't",
      "Async is faster",
      "Sync is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "hard",
    question: "What is event loop in JavaScript?",
    options: [
      "Loop of events",
      "Mechanism that handles asynchronous operations",
      "Event handling loop",
      "Looping events",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "hard",
    question: "What is prototype in JavaScript?",
    options: [
      "First type",
      "Object that serves as template for other objects",
      "Prototype design pattern",
      "Original object",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "hard",
    question: "What is the difference between call(), apply(), and bind()?",
    options: [
      "No difference",
      "Different ways to set 'this' context",
      "Performance differences",
      "Syntax variations",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "hard",
    question: "What is currying in JavaScript?",
    options: [
      "Curry function",
      "Transforming function with multiple args into sequence of functions",
      "Spicy function",
      "Curry programming",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "hard",
    question: "What is memoization in JavaScript?",
    options: [
      "Memory optimization",
      "Caching function results",
      "Memory technique",
      "Memorizing code",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "hard",
    question: "What is the difference between shallow copy and deep copy?",
    options: [
      "No difference",
      "Shallow copies references, deep copies values",
      "Deep copy is faster",
      "Shallow copy is automatic",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "hard",
    question: "What is async/await in JavaScript?",
    options: [
      "Asynchronous waiting",
      "Syntactic sugar for promises",
      "Async function",
      "Awaiting async",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "hard",
    question: "What is the difference between for...in and for...of loops?",
    options: [
      "No difference",
      "for...in iterates keys, for...of iterates values",
      "for...of is faster",
      "for...in is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "hard",
    question: "What is debouncing in JavaScript?",
    options: [
      "Bouncing back",
      "Limiting function execution frequency",
      "Debug bouncing",
      "Bounce control",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "hard",
    question: "What is throttling in JavaScript?",
    options: [
      "Throttle control",
      "Limiting function calls to fixed interval",
      "Performance throttling",
      "Speed control",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "hard",
    question: "What is the difference between slice() and splice()?",
    options: [
      "No difference",
      "slice() returns copy, splice() modifies original",
      "splice() is faster",
      "slice() is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "hard",
    question: "What is generator function in JavaScript?",
    options: [
      "Function generator",
      "Function that can pause and resume execution",
      "Code generator",
      "Function creation",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "hard",
    question: "What is the difference between localStorage and sessionStorage?",
    options: [
      "No difference",
      "localStorage persists, sessionStorage is session-only",
      "sessionStorage is faster",
      "localStorage is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "hard",
    question: "What is worker thread in JavaScript?",
    options: [
      "Working thread",
      "Script running in background thread",
      "Thread worker",
      "Background worker",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "hard",
    question: "What is module pattern in JavaScript?",
    options: [
      "Pattern for modules",
      "Design pattern for encapsulation",
      "Module design",
      "Pattern module",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "hard",
    question: "What is the difference between CommonJS and ES6 modules?",
    options: [
      "No difference",
      "CommonJS uses require/exports, ES6 uses import/export",
      "ES6 is faster",
      "CommonJS is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "hard",
    question: "What is polyfill in JavaScript?",
    options: [
      "Filling polls",
      "Code that implements missing features",
      "Performance filler",
      "Fill missing parts",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "hard",
    question: "What is the difference between microtasks and macrotasks?",
    options: [
      "Size difference",
      "Different priority in event loop",
      "Performance difference",
      "Syntax difference",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "hard",
    question: "What is proxy in JavaScript?",
    options: [
      "Proxy server",
      "Object that intercepts operations on other objects",
      "Network proxy",
      "Proxy pattern",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "hard",
    question: "What is symbol in JavaScript?",
    options: [
      "Mathematical symbol",
      "Primitive data type for unique identifiers",
      "Symbol table",
      "Symbolic representation",
    ],
    answer: 1,
  },
  {
    topic: "javascript",
    difficulty: "hard",
    question: "What is WeakMap and WeakSet?",
    options: [
      "Weak data structures",
      "Collections with weak references",
      "Performance optimized collections",
      "Weak typing collections",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "easy",
    question: "What is the file extension for Go source files?",
    options: [".go", ".golang", ".g", ".gol"],
    answer: 0,
  },
  {
    topic: "go",
    difficulty: "easy",
    question: "How do you declare a variable in Go?",
    options: ["var x int", "int x", "x := int", "declare x int"],
    answer: 0,
  },
  {
    topic: "go",
    difficulty: "easy",
    question: "What is the entry point of a Go program?",
    options: ["start()", "begin()", "main()", "init()"],
    answer: 2,
  },
  {
    topic: "go",
    difficulty: "easy",
    question: "How do you print output in Go?",
    options: ["print()", "fmt.Println()", "console.log()", "printf()"],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "easy",
    question: "What keyword is used to define a function in Go?",
    options: ["function", "func", "def", "fn"],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "easy",
    question: "How do you create a slice in Go?",
    options: ["make([]int, 5)", "slice(int, 5)", "[]int{}", "Both A and C"],
    answer: 3,
  },
  {
    topic: "go",
    difficulty: "easy",
    question: "What is the zero value of int in Go?",
    options: ["null", "undefined", "0", "-1"],
    answer: 2,
  },
  {
    topic: "go",
    difficulty: "easy",
    question: "How do you create a map in Go?",
    options: [
      "make(map[string]int)",
      "map[string]int{}",
      "Both A and B",
      "new(map[string]int)",
    ],
    answer: 2,
  },
  {
    topic: "go",
    difficulty: "easy",
    question: "What keyword is used for package declaration?",
    options: ["package", "pkg", "module", "namespace"],
    answer: 0,
  },
  {
    topic: "go",
    difficulty: "easy",
    question: "How do you import packages in Go?",
    options: [
      'import "package"',
      "include package",
      "using package",
      "require package",
    ],
    answer: 0,
  },
  {
    topic: "go",
    difficulty: "easy",
    question: "What is the correct syntax for if statement in Go?",
    options: [
      "if (condition)",
      "if condition",
      "if condition {}",
      "when condition",
    ],
    answer: 2,
  },
  {
    topic: "go",
    difficulty: "easy",
    question: "How do you declare a constant in Go?",
    options: ["const x = 5", "constant x = 5", "final x = 5", "static x = 5"],
    answer: 0,
  },
  {
    topic: "go",
    difficulty: "easy",
    question: "What is the syntax for a for loop in Go?",
    options: [
      "for i := 0; i < 10; i++",
      "for (i := 0; i < 10; i++)",
      "for i in range(10)",
      "loop i := 0; i < 10; i++",
    ],
    answer: 0,
  },
  {
    topic: "go",
    difficulty: "easy",
    question: "How do you define a struct in Go?",
    options: [
      "struct Person {}",
      "type Person struct {}",
      "class Person {}",
      "define Person struct {}",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "easy",
    question: "What is the correct way to handle errors in Go?",
    options: ["try-catch", "if err != nil", "error handling", "exception"],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "medium",
    question: "What is goroutine in Go?",
    options: [
      "Go routine",
      "Lightweight thread",
      "Function routine",
      "Go pattern",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "medium",
    question: "What keyword is used to create a goroutine?",
    options: ["thread", "async", "go", "routine"],
    answer: 2,
  },
  {
    topic: "go",
    difficulty: "medium",
    question: "What is channel in Go?",
    options: [
      "Communication channel",
      "Mechanism for goroutine communication",
      "Data channel",
      "Channel pattern",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "medium",
    question: "How do you create a channel in Go?",
    options: ["make(chan int)", "channel(int)", "chan int", "new(chan int)"],
    answer: 0,
  },
  {
    topic: "go",
    difficulty: "medium",
    question:
      "What is the difference between buffered and unbuffered channels?",
    options: [
      "No difference",
      "Buffered can hold values, unbuffered cannot",
      "Unbuffered is faster",
      "Buffered is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "medium",
    question: "What is interface in Go?",
    options: [
      "User interface",
      "Set of method signatures",
      "Interface pattern",
      "Connection interface",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "medium",
    question: "What is the empty interface in Go?",
    options: [
      "interface{}",
      "Interface with no methods",
      "Can hold any type",
      "All of the above",
    ],
    answer: 3,
  },
  {
    topic: "go",
    difficulty: "medium",
    question: "What is defer statement in Go?",
    options: [
      "Delay execution",
      "Execute function when surrounding function returns",
      "Defer decision",
      "Postpone operation",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "medium",
    question: "What is pointer in Go?",
    options: [
      "Pointing device",
      "Variable that stores memory address",
      "Pointer pattern",
      "Reference pointer",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "medium",
    question: "How do you get the address of a variable?",
    options: ["address(x)", "&x", "*x", "addr(x)"],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "medium",
    question: "What is method in Go?",
    options: [
      "Function with receiver",
      "Class method",
      "Method pattern",
      "Object method",
    ],
    answer: 0,
  },
  {
    topic: "go",
    difficulty: "medium",
    question: "What is the difference between method and function in Go?",
    options: [
      "No difference",
      "Method has receiver, function doesn't",
      "Function is faster",
      "Method is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "medium",
    question: "What is range keyword used for?",
    options: [
      "Number range",
      "Iterate over collections",
      "Range operator",
      "Range function",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "medium",
    question: "What is select statement in Go?",
    options: [
      "Select data",
      "Choose between channel operations",
      "Selection statement",
      "Select pattern",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "medium",
    question: "What happens when you close a channel?",
    options: [
      "Channel is deleted",
      "No more values can be sent",
      "Channel becomes nil",
      "Channel is reset",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "hard",
    question:
      "What is the difference between value receiver and pointer receiver?",
    options: [
      "No difference",
      "Value receiver gets copy, pointer receiver gets reference",
      "Pointer is faster",
      "Value is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "hard",
    question: "What is panic and recover in Go?",
    options: [
      "Error handling",
      "panic stops execution, recover catches panic",
      "Exception handling",
      "Panic mode",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "hard",
    question: "What is the difference between slice and array?",
    options: [
      "No difference",
      "Array has fixed size, slice is dynamic",
      "Slice is faster",
      "Array is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "hard",
    question: "What is type assertion in Go?",
    options: [
      "Asserting types",
      "Extract underlying value from interface",
      "Type checking",
      "Assert pattern",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "hard",
    question: "What is embedding in Go?",
    options: [
      "Embedding code",
      "Composing types by including other types",
      "Embedded systems",
      "Code embedding",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "hard",
    question: "What is the difference between concurrent and parallel?",
    options: [
      "Same thing",
      "Concurrent is about dealing with lots, parallel is about doing lots",
      "Parallel is faster",
      "Concurrent is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "hard",
    question: "What is mutex in Go?",
    options: [
      "Mutual exclusion",
      "Lock mechanism for shared resources",
      "Mutex pattern",
      "Synchronization primitive",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "hard",
    question: "What is the difference between sync.Mutex and sync.RWMutex?",
    options: [
      "No difference",
      "RWMutex allows multiple readers",
      "Mutex is faster",
      "RWMutex is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "hard",
    question: "What is context in Go?",
    options: [
      "Program context",
      "Carry deadlines, cancellation signals across API boundaries",
      "Context pattern",
      "Execution context",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "hard",
    question: "What is the purpose of build tags in Go?",
    options: [
      "Building tags",
      "Conditional compilation",
      "Tag building",
      "Build configuration",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "hard",
    question: "What is reflection in Go?",
    options: [
      "Code reflection",
      "Inspect types and values at runtime",
      "Mirror reflection",
      "Reflect pattern",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "hard",
    question: "What is the difference between make and new?",
    options: [
      "No difference",
      "make initializes, new allocates zero memory",
      "new is faster",
      "make is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "hard",
    question: "What is race condition in Go?",
    options: [
      "Racing condition",
      "Multiple goroutines accessing shared data unsafely",
      "Performance race",
      "Condition racing",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "hard",
    question: "What is the purpose of sync.WaitGroup?",
    options: [
      "Wait for group",
      "Wait for collection of goroutines to finish",
      "Group waiting",
      "Synchronization group",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "hard",
    question: "What is type switch in Go?",
    options: [
      "Switch types",
      "Switch statement for interface types",
      "Type switching",
      "Switch pattern",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "hard",
    question: "What is the difference between len and cap for slices?",
    options: [
      "No difference",
      "len is current length, cap is capacity",
      "cap is faster",
      "len is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "hard",
    question: "What is the purpose of go mod?",
    options: [
      "Go modification",
      "Module management system",
      "Go modular",
      "Module pattern",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "hard",
    question: "What is the difference between goroutine and thread?",
    options: [
      "Same thing",
      "Goroutines are lighter and managed by Go runtime",
      "Threads are faster",
      "Goroutines are deprecated",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "hard",
    question: "What is the purpose of init() function?",
    options: [
      "Initialize program",
      "Package initialization before main",
      "Initial function",
      "Initialization pattern",
    ],
    answer: 1,
  },
  {
    topic: "go",
    difficulty: "hard",
    question: "What is the difference between := and = in Go?",
    options: [
      "No difference",
      ":= declares and assigns, = only assigns",
      "= is faster",
      ":= is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "medium",
    question: "What is namespace in PHP?",
    options: [
      "Name space",
      "Way to organize code and avoid naming conflicts",
      "Space for names",
      "Named space",
    ],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "medium",
    question: "What is trait in PHP?",
    options: [
      "Character trait",
      "Mechanism for code reuse",
      "Trait pattern",
      "Class trait",
    ],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "medium",
    question: "What is the difference between static and non-static methods?",
    options: [
      "No difference",
      "Static belongs to class, non-static to instance",
      "Static is faster",
      "Non-static is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "medium",
    question: "What is exception handling in PHP?",
    options: [
      "Handling exceptions",
      "try-catch mechanism",
      "Error handling",
      "Exception management",
    ],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "medium",
    question: "What is the purpose of finally block?",
    options: [
      "Final execution",
      "Always executes after try-catch",
      "Final block",
      "End execution",
    ],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "hard",
    question: "What is closure in PHP?",
    options: [
      "Closing function",
      "Anonymous function that can capture variables",
      "Function closure",
      "Closed function",
    ],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "hard",
    question: "What is reflection in PHP?",
    options: [
      "Code reflection",
      "Ability to inspect classes and objects at runtime",
      "Mirror reflection",
      "Reflect pattern",
    ],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "hard",
    question:
      "What is the difference between array_merge() and array_combine()?",
    options: [
      "No difference",
      "merge combines arrays, combine uses one array as keys",
      "combine is faster",
      "merge is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "hard",
    question: "What is magic method in PHP?",
    options: [
      "Magical function",
      "Special methods that start with __",
      "Magic pattern",
      "Automatic methods",
    ],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "hard",
    question: "What is the difference between serialize() and json_encode()?",
    options: [
      "No difference",
      "serialize() is PHP specific, json_encode() creates JSON",
      "json_encode() is faster",
      "serialize() is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "hard",
    question: "What is autoloading in PHP?",
    options: [
      "Automatic loading",
      "Automatically load classes when needed",
      "Load automation",
      "Auto pattern",
    ],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "hard",
    question: "What is the difference between PDO and MySQLi?",
    options: [
      "No difference",
      "PDO supports multiple databases, MySQLi only MySQL",
      "MySQLi is faster",
      "PDO is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "hard",
    question: "What is composer in PHP?",
    options: [
      "Music composer",
      "Dependency management tool",
      "Code composer",
      "PHP composer",
    ],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "hard",
    question: "What is the difference between require_once and include_once?",
    options: [
      "No difference",
      "require_once stops on failure, include_once gives warning",
      "include_once is faster",
      "require_once is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "hard",
    question: "What is late static binding in PHP?",
    options: [
      "Late binding",
      "Resolves static calls at runtime",
      "Static late binding",
      "Binding pattern",
    ],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "hard",
    question: "What is the difference between abstract class and interface?",
    options: [
      "No difference",
      "Abstract class can have implementation, interface cannot",
      "Interface is faster",
      "Abstract class is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "hard",
    question: "What is generator in PHP?",
    options: [
      "Code generator",
      "Function that can yield values",
      "Data generator",
      "PHP generator",
    ],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "hard",
    question: "What is the purpose of yield keyword?",
    options: [
      "Yield results",
      "Create generator function",
      "Yield control",
      "Return yield",
    ],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "hard",
    question: "What is the difference between __sleep() and __wakeup()?",
    options: [
      "Sleep and wake up",
      "__sleep() before serialization, __wakeup() after unserialization",
      "Performance methods",
      "Debug methods",
    ],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "hard",
    question: "What is dependency injection in PHP?",
    options: [
      "Injecting dependencies",
      "Design pattern for providing dependencies",
      "Dependency pattern",
      "Injection pattern",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "easy",
    question: "What is an array?",
    options: [
      "Collection of elements",
      "Linear data structure with elements at contiguous memory locations",
      "Array pattern",
      "Element collection",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "easy",
    question:
      "What is the time complexity of accessing an element in an array?",
    options: ["O(1)", "O(n)", "O(log n)", "O(n^2)"],
    answer: 0,
  },
  {
    topic: "dataStructures",
    difficulty: "easy",
    question: "What is a linked list?",
    options: [
      "Linked structure",
      "Linear data structure where elements are stored in nodes",
      "List of links",
      "Connected list",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "easy",
    question: "What is a stack?",
    options: [
      "Stack of items",
      "LIFO (Last In First Out) data structure",
      "Stacking structure",
      "Stack pattern",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "easy",
    question: "What are the main operations of a stack?",
    options: ["insert, delete", "push, pop", "add, remove", "put, get"],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "easy",
    question: "What is a queue?",
    options: [
      "Waiting queue",
      "FIFO (First In First Out) data structure",
      "Queue pattern",
      "Line structure",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "easy",
    question: "What are the main operations of a queue?",
    options: ["push, pop", "enqueue, dequeue", "insert, delete", "add, remove"],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "easy",
    question: "What is a binary tree?",
    options: [
      "Two trees",
      "Tree structure where each node has at most two children",
      "Binary structure",
      "Tree with binary data",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "easy",
    question: "What is the root of a tree?",
    options: ["Tree root", "Topmost node", "Bottom node", "Root node"],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "easy",
    question: "What is a leaf node?",
    options: ["Tree leaf", "Node with no children", "Last node", "End node"],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "easy",
    question: "What is a hash table?",
    options: [
      "Hash structure",
      "Data structure that maps keys to values using hash function",
      "Table of hashes",
      "Hash pattern",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "easy",
    question: "What is the advantage of linked list over array?",
    options: [
      "Faster access",
      "Dynamic size",
      "Less memory",
      "Simpler implementation",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "easy",
    question: "What is the disadvantage of linked list compared to array?",
    options: [
      "Dynamic size",
      "No random access",
      "More memory efficient",
      "Easier to implement",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "easy",
    question: "What is a graph?",
    options: [
      "Chart",
      "Collection of vertices connected by edges",
      "Graph pattern",
      "Visual representation",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "easy",
    question: "What are vertices and edges in a graph?",
    options: [
      "Points and lines",
      "Nodes and connections between them",
      "Vertex pattern",
      "Edge structure",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "medium",
    question:
      "What is the time complexity of insertion in a binary search tree (average case)?",
    options: ["O(1)", "O(log n)", "O(n)", "O(n^2)"],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "medium",
    question: "What is a balanced binary tree?",
    options: [
      "Tree with equal nodes",
      "Tree where height difference of subtrees is at most 1",
      "Balanced structure",
      "Equal tree",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "medium",
    question: "What is the difference between BFS and DFS?",
    options: [
      "No difference",
      "BFS explores level by level, DFS goes deep first",
      "DFS is faster",
      "BFS is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "medium",
    question: "What is a heap?",
    options: [
      "Heap of data",
      "Complete binary tree with heap property",
      "Memory heap",
      "Heap pattern",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "medium",
    question: "What is the difference between min heap and max heap?",
    options: [
      "Size difference",
      "Min heap has smallest at root, max heap has largest",
      "Performance difference",
      "Implementation difference",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "medium",
    question: "What is a priority queue?",
    options: [
      "High priority queue",
      "Abstract data type where elements have priorities",
      "Queue with priority",
      "Priority structure",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "medium",
    question: "What is hash collision?",
    options: [
      "Hash crash",
      "When hash function produces same hash for different keys",
      "Collision detection",
      "Hash conflict",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "medium",
    question: "What are the methods to handle hash collision?",
    options: [
      "Chaining and open addressing",
      "Rehashing",
      "Collision avoidance",
      "All methods",
    ],
    answer: 0,
  },
  {
    topic: "dataStructures",
    difficulty: "medium",
    question: "What is a trie?",
    options: [
      "Try structure",
      "Tree-like data structure for storing strings",
      "Trie pattern",
      "String tree",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "medium",
    question: "What is the space complexity of adjacency matrix for graph?",
    options: ["O(V)", "O(V^2)", "O(E)", "O(V+E)"],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "medium",
    question: "What is the space complexity of adjacency list for graph?",
    options: ["O(V^2)", "O(V+E)", "O(E)", "O(V)"],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "medium",
    question: "What is a doubly linked list?",
    options: [
      "Double list",
      "Linked list where each node has pointer to both next and previous",
      "Two linked lists",
      "Double connection",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "medium",
    question: "What is circular linked list?",
    options: [
      "Circular structure",
      "Linked list where last node points to first",
      "Circle list",
      "Round list",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "medium",
    question: "What is dequeue (double-ended queue)?",
    options: [
      "Double queue",
      "Queue where insertion/deletion possible at both ends",
      "Two queues",
      "Extended queue",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "hard",
    question: "What is an AVL tree?",
    options: [
      "Named tree",
      "Self-balancing binary search tree",
      "AVL structure",
      "Advanced tree",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "hard",
    question: "What is a Red-Black tree?",
    options: [
      "Colored tree",
      "Self-balancing binary search tree with color properties",
      "Red and black tree",
      "Color coded tree",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "hard",
    question: "What is the time complexity of heapify operation?",
    options: ["O(1)", "O(log n)", "O(n)", "O(n log n)"],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "hard",
    question: "What is a B-tree?",
    options: [
      "Binary tree",
      "Self-balancing tree data structure for databases",
      "B-grade tree",
      "Basic tree",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "hard",
    question: "What is the difference between B-tree and B+ tree?",
    options: [
      "No difference",
      "B+ tree stores data only in leaves",
      "B-tree is faster",
      "B+ is newer version",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "hard",
    question: "What is a segment tree?",
    options: [
      "Segmented tree",
      "Tree data structure for range queries",
      "Tree segments",
      "Segment structure",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "hard",
    question: "What is a Fenwick tree (Binary Indexed Tree)?",
    options: [
      "Fenwick structure",
      "Data structure for efficient range sum queries",
      "Binary tree",
      "Indexed structure",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "hard",
    question: "What is union-find (disjoint set) data structure?",
    options: [
      "Union of sets",
      "Data structure for tracking disjoint sets",
      "Find union",
      "Set operations",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "hard",
    question:
      "What is the time complexity of union-find with path compression?",
    options: ["O(1)", "O(α(n)) - inverse Ackermann", "O(log n)", "O(n)"],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "hard",
    question: "What is a suffix array?",
    options: [
      "Array suffix",
      "Sorted array of all suffixes of a string",
      "Suffix structure",
      "String array",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "hard",
    question: "What is the difference between stable and unstable sorting?",
    options: [
      "Stability difference",
      "Stable preserves relative order of equal elements",
      "Stable is faster",
      "Unstable is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "hard",
    question: "What is a skip list?",
    options: [
      "Skipping list",
      "Probabilistic data structure for fast search",
      "Skip structure",
      "List with skips",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "hard",
    question: "What is a bloom filter?",
    options: [
      "Flower filter",
      "Probabilistic data structure for set membership",
      "Bloom structure",
      "Filter pattern",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "hard",
    question: "What is the pigeonhole principle in data structures?",
    options: [
      "Pigeons in holes",
      "If n items put into m containers with n > m, at least one container has multiple items",
      "Pigeon structure",
      "Hole principle",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "hard",
    question: "What is amortized time complexity?",
    options: [
      "Average time",
      "Average time per operation over sequence of operations",
      "Amortized analysis",
      "Time averaging",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "hard",
    question: "What is a van Emde Boas tree?",
    options: [
      "Named tree",
      "Tree data structure for integer keys with O(log log U) operations",
      "VEB structure",
      "Advanced tree",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "hard",
    question: "What is the difference between internal and external sorting?",
    options: [
      "Location difference",
      "Internal uses main memory, external uses secondary storage",
      "Internal is faster",
      "External is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "hard",
    question: "What is a treap?",
    options: [
      "Tree trap",
      "Randomized binary search tree",
      "Tree heap",
      "Trap structure",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "hard",
    question: "What is persistent data structure?",
    options: [
      "Persistent storage",
      "Data structure that preserves previous versions",
      "Long-lasting structure",
      "Persistence pattern",
    ],
    answer: 1,
  },
  {
    topic: "dataStructures",
    difficulty: "hard",
    question: "What is locality of reference?",
    options: [
      "Local references",
      "Tendency to access data locations near recently accessed locations",
      "Reference locality",
      "Local access",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "hard",
    question: "What is isolation level in transactions?",
    options: [
      "Isolation degree",
      "Level of transaction isolation from other transactions",
      "Transaction level",
      "Isolation setting",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "hard",
    question: "What is stored procedure?",
    options: [
      "Stored process",
      "Precompiled SQL code stored in database",
      "Database procedure",
      "Stored function",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "hard",
    question: "What is trigger in database?",
    options: [
      "Database trigger",
      "Special procedure that runs automatically on events",
      "Event trigger",
      "Automatic procedure",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "hard",
    question: "What is the difference between function and stored procedure?",
    options: [
      "No difference",
      "Function returns value, procedure may not",
      "Procedure is faster",
      "Function is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "hard",
    question: "What is cursor in SQL?",
    options: [
      "Database cursor",
      "Pointer to result set",
      "Data pointer",
      "Result cursor",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "hard",
    question: "What is the difference between OLTP and OLAP?",
    options: [
      "No difference",
      "OLTP for transactions, OLAP for analysis",
      "OLAP is faster",
      "OLTP is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "hard",
    question: "What is data warehouse?",
    options: [
      "Data storage",
      "Central repository for integrated data from multiple sources",
      "Warehouse for data",
      "Data center",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "hard",
    question: "What is ETL process?",
    options: [
      "Extract, Transform, Load",
      "Process of moving data from source to destination",
      "Data pipeline",
      "All of the above",
    ],
    answer: 3,
  },
  {
    topic: "sql",
    difficulty: "hard",
    question: "What is MERGE statement?",
    options: [
      "Merge tables",
      "Statement that can INSERT, UPDATE, or DELETE based on condition",
      "Table merge",
      "Data merge",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "easy",
    question: "What type of database is MongoDB?",
    options: ["Relational", "NoSQL Document", "Graph", "Key-value"],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "easy",
    question: "What format does MongoDB use to store data?",
    options: ["JSON", "BSON", "XML", "CSV"],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "easy",
    question: "What is a collection in MongoDB?",
    options: [
      "Data collection",
      "Group of documents",
      "Collection of data",
      "Document group",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "easy",
    question: "What is a document in MongoDB?",
    options: [
      "Text document",
      "Record in collection",
      "Document file",
      "Data document",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "easy",
    question: "Which method is used to find documents?",
    options: ["search()", "find()", "get()", "query()"],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "easy",
    question: "Which method is used to insert documents?",
    options: ["add()", "insert()", "insertOne()", "Both B and C"],
    answer: 3,
  },
  {
    topic: "mongodb",
    difficulty: "easy",
    question: "Which method is used to update documents?",
    options: ["modify()", "update()", "updateOne()", "Both B and C"],
    answer: 3,
  },
  {
    topic: "mongodb",
    difficulty: "easy",
    question: "Which method is used to delete documents?",
    options: ["remove()", "delete()", "deleteOne()", "Both A and C"],
    answer: 3,
  },
  {
    topic: "mongodb",
    difficulty: "easy",
    question: "What is _id field in MongoDB?",
    options: [
      "Identity field",
      "Unique identifier for documents",
      "ID number",
      "Primary key",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "easy",
    question: "What is ObjectId in MongoDB?",
    options: [
      "Object identifier",
      "12-byte identifier for _id field",
      "Object ID",
      "Unique object",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "easy",
    question: "Which operator is used for equality matching?",
    options: ["$eq", "$equal", "$match", "All of the above"],
    answer: 0,
  },
  {
    topic: "mongodb",
    difficulty: "easy",
    question: "Which operator is used for greater than comparison?",
    options: [">", "$gt", "$greater", "$g"],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "easy",
    question: "Which method counts documents?",
    options: ["count()", "countDocuments()", "size()", "length()"],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "easy",
    question: "Which method sorts documents?",
    options: ["sort()", "order()", "arrange()", "sequence()"],
    answer: 0,
  },
  {
    topic: "mongodb",
    difficulty: "easy",
    question: "Which method limits the number of documents returned?",
    options: ["limit()", "top()", "max()", "restrict()"],
    answer: 0,
  },
  {
    topic: "mongodb",
    difficulty: "medium",
    question: "What is aggregation pipeline?",
    options: [
      "Data aggregation",
      "Framework for data aggregation operations",
      "Pipeline for data",
      "Aggregate operations",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "medium",
    question: "Which stage is used to filter documents in aggregation?",
    options: ["$filter", "$match", "$where", "$select"],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "medium",
    question: "Which stage is used to group documents?",
    options: ["$group", "$cluster", "$aggregate", "$collect"],
    answer: 0,
  },
  {
    topic: "mongodb",
    difficulty: "medium",
    question: "What is indexing in MongoDB?",
    options: [
      "Data indexing",
      "Data structure that improves query performance",
      "Index creation",
      "Data organization",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "medium",
    question: "Which method creates an index?",
    options: ["createIndex()", "addIndex()", "makeIndex()", "buildIndex()"],
    answer: 0,
  },
  {
    topic: "mongodb",
    difficulty: "medium",
    question: "What is compound index?",
    options: [
      "Complex index",
      "Index on multiple fields",
      "Compound structure",
      "Multi-field index",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "medium",
    question: "What is replica set in MongoDB?",
    options: [
      "Data replication",
      "Group of MongoDB instances with same data",
      "Replica group",
      "Data copies",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "medium",
    question: "What is sharding in MongoDB?",
    options: [
      "Data sharding",
      "Method of distributing data across multiple machines",
      "Data distribution",
      "Database splitting",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "medium",
    question:
      "What is the difference between embedded and referenced documents?",
    options: [
      "No difference",
      "Embedded are nested, referenced are separate",
      "Referenced is faster",
      "Embedded is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "medium",
    question: "What is schema validation in MongoDB?",
    options: [
      "Schema checking",
      "Rules to validate document structure",
      "Data validation",
      "Document rules",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "medium",
    question: "Which operator is used for logical AND?",
    options: ["$and", "$AND", "AND", "&"],
    answer: 0,
  },
  {
    topic: "mongodb",
    difficulty: "medium",
    question: "Which operator is used for logical OR?",
    options: ["$or", "$OR", "OR", "|"],
    answer: 0,
  },
  {
    topic: "mongodb",
    difficulty: "medium",
    question: "What is GridFS in MongoDB?",
    options: [
      "Grid file system",
      "Specification for storing large files",
      "File grid",
      "Storage system",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "medium",
    question: "Which stage projects specific fields in aggregation?",
    options: ["$project", "$select", "$fields", "$show"],
    answer: 0,
  },
  {
    topic: "mongodb",
    difficulty: "medium",
    question: "What is the difference between find() and findOne()?",
    options: [
      "No difference",
      "find() returns cursor, findOne() returns single document",
      "findOne() is faster",
      "find() is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "hard",
    question: "What is write concern in MongoDB?",
    options: [
      "Write worry",
      "Level of acknowledgment for write operations",
      "Write configuration",
      "Write setting",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "hard",
    question: "What is read concern in MongoDB?",
    options: [
      "Read worry",
      "Level of isolation for read operations",
      "Read configuration",
      "Read setting",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "hard",
    question: "What is oplog in MongoDB?",
    options: [
      "Operation log",
      "Capped collection that stores operations for replication",
      "Operation logger",
      "Log operations",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "hard",
    question: "What is the difference between $lookup and populate?",
    options: [
      "Same thing",
      "$lookup is native aggregation, populate is Mongoose feature",
      "populate is faster",
      "$lookup is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "hard",
    question: "What is transaction in MongoDB?",
    options: [
      "Data transaction",
      "Multi-document ACID operations",
      "Database operation",
      "Data exchange",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "hard",
    question: "Which stage unwinds array fields?",
    options: ["$unwind", "$expand", "$flatten", "$array"],
    answer: 0,
  },
  {
    topic: "mongodb",
    difficulty: "hard",
    question: "What is change stream in MongoDB?",
    options: [
      "Stream change",
      "Real-time notifications of data changes",
      "Change monitoring",
      "Data stream",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "hard",
    question: "What is the difference between explain() and hint()?",
    options: [
      "No difference",
      "explain() shows execution plan, hint() forces index usage",
      "hint() is faster",
      "explain() is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "hard",
    question: "What is partial index in MongoDB?",
    options: [
      "Incomplete index",
      "Index with filter expression",
      "Partial structure",
      "Filtered index",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "hard",
    question: "What is sparse index in MongoDB?",
    options: [
      "Thin index",
      "Index that only includes documents with indexed field",
      "Sparse structure",
      "Selective index",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "hard",
    question: "What is text index in MongoDB?",
    options: [
      "Text search index",
      "Index for text search operations",
      "String index",
      "Search index",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "hard",
    question: "What is geospatial index in MongoDB?",
    options: [
      "Geographic index",
      "Index for location-based queries",
      "Spatial index",
      "Geographic structure",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "hard",
    question: "What is the difference between $facet and multiple pipelines?",
    options: [
      "No difference",
      "$facet runs multiple pipelines in single stage",
      "Multiple pipelines is faster",
      "$facet is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "hard",
    question: "What is zone in sharded cluster?",
    options: [
      "Cluster zone",
      "Range of shard keys mapped to specific shards",
      "Shard zone",
      "Data zone",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "hard",
    question: "What is the difference between update() and replace()?",
    options: [
      "Same thing",
      "update() modifies fields, replace() replaces entire document",
      "replace() is faster",
      "update() is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "hard",
    question: "What is capped collection in MongoDB?",
    options: [
      "Limited collection",
      "Fixed-size collection with insertion-order preservation",
      "Capped structure",
      "Size-limited collection",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "hard",
    question: "What is the difference between MongoDB and traditional RDBMS?",
    options: [
      "No difference",
      "MongoDB is document-based NoSQL, RDBMS is table-based SQL",
      "RDBMS is faster",
      "MongoDB is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "hard",
    question: "What is the purpose of $redact stage?",
    options: [
      "Redact data",
      "Restricts document content based on document itself",
      "Data redaction",
      "Content restriction",
    ],
    answer: 1,
  },
  {
    topic: "mongodb",
    difficulty: "hard",
    question: "What is the difference between save() and insert()?",
    options: [
      "Same thing",
      "save() can update if _id exists, insert() only creates new",
      "insert() is faster",
      "save() is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "easy",
    question: "Which statement is used to retrieve data from database?",
    options: ["GET", "RETRIEVE", "SELECT", "FETCH"],
    answer: 2,
  },
  {
    topic: "sql",
    difficulty: "easy",
    question: "Which clause is used to filter rows?",
    options: ["FILTER", "WHERE", "HAVING", "CONDITION"],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "easy",
    question: "Which statement is used to insert data?",
    options: ["ADD", "INSERT", "PUT", "CREATE"],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "easy",
    question: "Which statement is used to update data?",
    options: ["MODIFY", "CHANGE", "UPDATE", "ALTER"],
    answer: 2,
  },
  {
    topic: "sql",
    difficulty: "easy",
    question: "Which statement is used to delete data?",
    options: ["REMOVE", "DELETE", "DROP", "ERASE"],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "easy",
    question: "Which clause is used to sort results?",
    options: ["SORT", "ORDER BY", "ARRANGE", "SEQUENCE"],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "easy",
    question: "What is primary key?",
    options: [
      "Main key",
      "Unique identifier for table rows",
      "First key",
      "Primary identifier",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "easy",
    question: "What is foreign key?",
    options: [
      "External key",
      "Key that refers to primary key of another table",
      "Foreign identifier",
      "Outside key",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "easy",
    question: "Which operator is used for pattern matching?",
    options: ["MATCH", "LIKE", "PATTERN", "SIMILAR"],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "easy",
    question: "What does '%' wildcard represent in LIKE?",
    options: [
      "Single character",
      "Zero or more characters",
      "Percentage",
      "Special character",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "easy",
    question: "What does '_' wildcard represent in LIKE?",
    options: ["Zero characters", "Single character", "Underscore", "Space"],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "easy",
    question: "Which function counts the number of rows?",
    options: ["COUNT()", "ROWS()", "NUMBER()", "TOTAL()"],
    answer: 0,
  },
  {
    topic: "sql",
    difficulty: "easy",
    question: "Which clause groups rows?",
    options: ["GROUP", "GROUP BY", "CLUSTER", "CATEGORIZE"],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "easy",
    question: "Which statement creates a table?",
    options: ["CREATE TABLE", "MAKE TABLE", "NEW TABLE", "BUILD TABLE"],
    answer: 0,
  },
  {
    topic: "sql",
    difficulty: "medium",
    question: "What is the difference between WHERE and HAVING clauses?",
    options: [
      "No difference",
      "WHERE filters rows, HAVING filters groups",
      "HAVING is faster",
      "WHERE is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "medium",
    question: "What is a JOIN?",
    options: [
      "Joining tables",
      "Combining rows from multiple tables",
      "Table connection",
      "Data merge",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "medium",
    question: "What is INNER JOIN?",
    options: [
      "Inner connection",
      "Returns rows with matching values in both tables",
      "Internal join",
      "Inside join",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "medium",
    question: "What is LEFT JOIN?",
    options: [
      "Left connection",
      "Returns all rows from left table and matched rows from right",
      "Left side join",
      "Leftward join",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "medium",
    question: "What is the difference between UNION and UNION ALL?",
    options: [
      "No difference",
      "UNION removes duplicates, UNION ALL keeps all",
      "UNION ALL is faster",
      "UNION is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "medium",
    question: "What is subquery?",
    options: [
      "Sub question",
      "Query inside another query",
      "Secondary query",
      "Nested query",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "medium",
    question: "What is correlated subquery?",
    options: [
      "Related subquery",
      "Subquery that references outer query",
      "Correlated query",
      "Connected subquery",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "medium",
    question: "What is index in database?",
    options: [
      "Index finger",
      "Data structure that improves query performance",
      "Table index",
      "Data pointer",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "medium",
    question: "What is normalization?",
    options: [
      "Making normal",
      "Process of organizing data to reduce redundancy",
      "Data standardization",
      "Normal form",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "medium",
    question: "What is denormalization?",
    options: [
      "Reverse normalization",
      "Adding redundancy to improve performance",
      "Making abnormal",
      "Denormal form",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "medium",
    question: "What is transaction?",
    options: [
      "Data transaction",
      "Unit of work that maintains database consistency",
      "Database operation",
      "Data exchange",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "medium",
    question: "What are ACID properties?",
    options: [
      "Acidic properties",
      "Atomicity, Consistency, Isolation, Durability",
      "Database properties",
      "Transaction properties",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "medium",
    question: "What is constraint?",
    options: [
      "Database restriction",
      "Rule applied to table columns",
      "Data limitation",
      "Table rule",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "medium",
    question: "What is the difference between TRUNCATE and DELETE?",
    options: [
      "No difference",
      "TRUNCATE removes all rows and resets identity, DELETE can be conditional",
      "DELETE is faster",
      "TRUNCATE is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "medium",
    question: "What is view in SQL?",
    options: [
      "Database view",
      "Virtual table based on query result",
      "Table view",
      "Data perspective",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "hard",
    question: "What is window function?",
    options: [
      "Window operation",
      "Function that performs calculation across related rows",
      "Windowed calculation",
      "Row window",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "hard",
    question: "What is the difference between RANK() and DENSE_RANK()?",
    options: [
      "No difference",
      "RANK() leaves gaps, DENSE_RANK() doesn't",
      "DENSE_RANK() is faster",
      "RANK() is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "hard",
    question: "What is CTE (Common Table Expression)?",
    options: [
      "Common table",
      "Temporary result set within query",
      "Table expression",
      "Common expression",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "hard",
    question: "What is recursive CTE?",
    options: [
      "Recursive table",
      "CTE that references itself",
      "Recursive expression",
      "Self-referencing CTE",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "hard",
    question: "What is pivot operation?",
    options: [
      "Pivot table",
      "Converting rows to columns",
      "Table pivot",
      "Data rotation",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "hard",
    question: "What is unpivot operation?",
    options: [
      "Reverse pivot",
      "Converting columns to rows",
      "Table unpivot",
      "Data unrotation",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "hard",
    question: "What is deadlock in database?",
    options: [
      "Dead lock",
      "Situation where transactions wait for each other indefinitely",
      "Lock failure",
      "Database freeze",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "hard",
    question: "What is query execution plan?",
    options: [
      "Query plan",
      "Steps database uses to execute query",
      "Execution strategy",
      "Query blueprint",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "hard",
    question: "What is materialized view?",
    options: [
      "Material view",
      "Physical copy of view data",
      "Solid view",
      "Concrete view",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "hard",
    question: "What is partitioning in database?",
    options: [
      "Dividing database",
      "Splitting large tables into smaller pieces",
      "Database partition",
      "Table division",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "hard",
    question:
      "What is the difference between clustered and non-clustered index?",
    options: [
      "No difference",
      "Clustered physically orders data, non-clustered doesn't",
      "Non-clustered is faster",
      "Clustered is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "sql",
    difficulty: "easy",
    question: "How do you start a PHP script?",
    options: ["<php>", "<?php", "<script>", "<?php?>"],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "easy",
    question: "How do you declare a variable in PHP?",
    options: ["var $x;", "$x;", "variable $x;", "declare $x;"],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "easy",
    question: "What is the correct way to end a PHP statement?",
    options: [".", ":", ";", ","],
    answer: 2,
  },
  {
    topic: "php",
    difficulty: "easy",
    question: "How do you print output in PHP?",
    options: ["print()", "echo", "console.log()", "Both A and B"],
    answer: 3,
  },
  {
    topic: "php",
    difficulty: "easy",
    question: "How do you create a comment in PHP?",
    options: ["# comment", "// comment", "/* comment */", "All of the above"],
    answer: 3,
  },
  {
    topic: "php",
    difficulty: "easy",
    question: "How do you create an array in PHP?",
    options: ["array()", "[]", "Both A and B", "new Array()"],
    answer: 2,
  },
  {
    topic: "php",
    difficulty: "easy",
    question: "What is the correct syntax for a function in PHP?",
    options: [
      "function myFunc()",
      "def myFunc()",
      "func myFunc()",
      "create myFunc()",
    ],
    answer: 0,
  },
  {
    topic: "php",
    difficulty: "easy",
    question: "How do you include a file in PHP?",
    options: [
      "include 'file.php'",
      "import 'file.php'",
      "require 'file.php'",
      "Both A and C",
    ],
    answer: 3,
  },
  {
    topic: "php",
    difficulty: "easy",
    question: "What is the correct syntax for if statement?",
    options: [
      "if (condition)",
      "if condition",
      "if (condition) {}",
      "when condition",
    ],
    answer: 2,
  },
  {
    topic: "php",
    difficulty: "easy",
    question: "How do you get the length of a string in PHP?",
    options: ["length($str)", "strlen($str)", "size($str)", "$str.length"],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "easy",
    question: "What symbol is used for string concatenation?",
    options: ["+", ".", "&", ","],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "easy",
    question: "How do you create a class in PHP?",
    options: [
      "class MyClass {}",
      "create class MyClass",
      "new class MyClass",
      "define MyClass",
    ],
    answer: 0,
  },
  {
    topic: "php",
    difficulty: "easy",
    question: "What is the correct way to create an object?",
    options: [
      "new MyClass()",
      "$obj = MyClass()",
      "$obj = new MyClass()",
      "create MyClass()",
    ],
    answer: 2,
  },
  {
    topic: "php",
    difficulty: "easy",
    question: "How do you access object properties?",
    options: [
      "$obj.property",
      "$obj->property",
      "$obj::property",
      "$obj[property]",
    ],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "easy",
    question: "What is the superglobal for form data?",
    options: ["$_FORM", "$_POST", "$_DATA", "$_INPUT"],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "medium",
    question: "What is the difference between include and require?",
    options: [
      "No difference",
      "require stops execution on failure, include gives warning",
      "include is faster",
      "require is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "medium",
    question: "What is the difference between == and === in PHP?",
    options: [
      "No difference",
      "== compares values, === compares values and types",
      "=== is faster",
      "== is deprecated",
    ],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "medium",
    question: "What is session in PHP?",
    options: [
      "User session",
      "Way to store data across pages",
      "Session management",
      "User state",
    ],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "medium",
    question: "How do you start a session in PHP?",
    options: [
      "start_session()",
      "session_start()",
      "begin_session()",
      "init_session()",
    ],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "medium",
    question: "What is the difference between public, private, and protected?",
    options: [
      "No difference",
      "Different visibility levels",
      "Performance difference",
      "Syntax variations",
    ],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "medium",
    question: "What is constructor in PHP?",
    options: [
      "__construct()",
      "Special method to initialize objects",
      "Object constructor",
      "All of the above",
    ],
    answer: 3,
  },
  {
    topic: "php",
    difficulty: "medium",
    question: "What is inheritance in PHP?",
    options: [
      "Inheriting properties",
      "Class extending another class",
      "Property inheritance",
      "Method inheritance",
    ],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "medium",
    question: "What keyword is used for inheritance?",
    options: ["extends", "inherits", "implements", "derives"],
    answer: 0,
  },
  {
    topic: "php",
    difficulty: "medium",
    question: "What is interface in PHP?",
    options: [
      "User interface",
      "Contract that classes must follow",
      "Interface pattern",
      "Class interface",
    ],
    answer: 1,
  },
  {
    topic: "php",
    difficulty: "medium",
    question: "What is abstract class in PHP?",
    options: [
      "Class that cannot be instantiated",
      "Abstract concept",
      "Class with abstract methods",
      "Both A and C",
    ],
    answer: 3,
  },
  {
    topic: "php",
    difficulty: "medium",
    question: "Which keyword is used to create a class in Java?",
    options: ["class", "Class", "create", "new"],
    answer: 0,
  },
  {
    topic: "java",
    difficulty: "easy",
    question: "What is the correct way to declare the main method in Java?",
    options: [
      "public static void main(String args[])",
      "static public void main(String[] args)",
      "public static void main(String[] args)",
      "All of the above",
    ],
    answer: 3,
  },
  {
    topic: "java",
    difficulty: "easy",
    question:
      "Which data type is used to create a variable that should store text?",
    options: ["String", "string", "Text", "char"],
    answer: 0,
  },
  {
    topic: "java",
    difficulty: "easy",
    question: "What is the size of int data type in Java?",
    options: ["2 bytes", "4 bytes", "8 bytes", "Platform dependent"],
    answer: 1,
  },
  {
    topic: "java",
    difficulty: "easy",
    question: "Which method is used to print output in Java?",
    options: ["print()", "printf()", "System.out.println()", "console.log()"],
    answer: 2,
  },
  {
    topic: "java",
    difficulty: "easy",
    question: "What is the correct syntax for single line comment in Java?",
    options: ["# comment", "// comment", "/* comment */", "-- comment"],
    answer: 1,
  },
];


ConnectToDatabase()

const insertIntoDatabase = async () => {
    try {
        const inserted = await Question.insertMany(sampleMCQ);
        if(inserted) {
            console.log("the data have been seccessfully pushed inside the mongo db database");
        } else {
            console.log("There was an error while inserting the data into database");
        }
    } catch (error) {
        console.log(error);
    }
}

insertIntoDatabase();